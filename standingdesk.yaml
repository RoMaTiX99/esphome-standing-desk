captive_portal:

#####################
# template
#####################

# external_components:
#   - source:
#       type: local
#       path: /config/esphome/components
#     components: [ standing_desk_height ]
  
# uart:
# # Direction: Handset -> Control Box
# - id: handset_tx
#   baud_rate: 1000
#   rx_pin: 
#     number: ${standing_desk_uart_rx_pin}
#     inverted: true
#   parity: EVEN
#   # debug: &uart_debug
#   #   direction: RX
#   #   dummy_receiver: true
#   #   after:
#   #     timeout: 50ms
#   #   sequence:
#   #     - lambda: UARTDebug::log_hex(uart::UART_DIRECTION_TX, bytes, ':');
# 
# sensor:
#   - platform: standing_desk_height
#     id: desk_height
#     name: ${desk_height_name}
#     unit_of_measurement: ${default_height_units}
#     variant: ${standing_desk_variant}

# number:
#   - platform: template
#     id: target_desk_height
#     name: ${target_desk_height_name}
#     unit_of_measurement: ${default_height_units}
#     restore_value: true
#     optimistic: true
#     min_value: ${standing_desk_min_height}
#     max_value: ${standing_desk_max_height}
#     step: 0.1
#     set_action:
#       then:
#         - if:
#             condition:
#               lambda: "return id(desk_height)->get_last_read() > x;"
#             then:
#               - switch.turn_on: switch_down
#               - wait_until:
#                   condition:
#                     lambda: "return id(desk_height)->get_last_read() <= x + 0.4;"
#                   timeout: 20s
#               - switch.turn_off: switch_down
#             else:
#               - switch.turn_on: switch_up
#               - wait_until:
#                   condition:
#                     lambda: "return id(desk_height)->get_last_read() >= x - 0.4;"
#                   timeout: 20s
#               - switch.turn_off: switch_up


output:
  # HS1
  - platform: gpio
    id: bit1
    pin: ${bit1_pin}

  # HS2
  - platform: gpio
    id: bit2
    pin: ${bit2_pin}

  # HS3
  - platform: gpio
    id: bit3
    pin: ${bit3_pin}

  # HS4
  - platform: gpio
    id: bit4
    pin: ${bit4_pin}

# Logical Connection of Action and Bits
switch:
  - platform: output
    name: "up"
    id: "switch_up"
    output: bit1
    on_turn_on:
      then: 
        - output.turn_on: bit1
        - delay: 15s
        - switch.turn_off: switch_up
    on_turn_off:
      then:
        - output.turn_off: bit1

  - platform: output
    name: "down"
    id: "switch_down"
    output: bit4
    on_turn_on:
      then: 
        - output.turn_on: bit4
        - delay: 15s
        - switch.turn_off: switch_down
    on_turn_off:
      then:
        - output.turn_off: bit4

  - platform: output
    name: "move position1"
    id: "move_position1"
    output: bit2
    on_turn_on:
      then: 
        - output.turn_on: bit2
        - delay: 15s
        - switch.turn_off: move_position1
    on_turn_off:
      then:
        - output.turn_off: bit2

  - platform: output
    name: "move_position2"
    id: "move_position2"
    output: bit3
    on_turn_on:
      then: 
        - output.turn_on: bit4
        - delay: 15s
        - switch.turn_off: move_position2
    on_turn_off:
      then:
        - output.turn_off: bit4

button:
  - platform: restart
    name: "Restart"

# Configurable options
substitutions:
  name: "standing-desk"
  friendly_name: "Upsy Desky"
  desk_height_name: "Desk Height"
  target_desk_height_name: "Target Desk Height"
  standing_desk_variant: "logicdata"
  # Standing Desk Component Config
  standing_desk_uart_rx_pin: GPIO21
  standing_desk_min_height: "68"
  standing_desk_max_height: "118"
  bit1_pin: GPIO16 #up
  bit2_pin: GPIO17 #memory 1
  bit3_pin: GPIO18 #memory 2 (memory position 3 on handset)
  bit4_pin: GPIO19 #down 

  # Runtime Config Defaults
  default_height_units: "cm" # Must be "in" or "cm"
